.col-md-3
  #wrapper
    =render 'users/profile'
.col-md-6
  = render 'layouts/messages'
  .panel.post
    -if @user.present?
      %h4 post something
      =form_for @block, :url => blocks_path, :html => { :multipart => true } do |f|
        .form-group
          =f.text_area :body, :class => 'form-control'
          =f.hidden_field :user_id, value: @user.id
        .form-group
          =f.check_box :viewable
          %h9 Friends only
        .form-group
          =label_tag( 'block[image]', "", :class => 'btn btn-primary') do
            .fa.fa-camera-retro.fa-lg
          =f.file_field :image, :class => 'hide'
          = button_tag(:type => 'submit', :class => 'btn btn-default') do
            Post
            .fa.fa-share
    -else
      %h5 log in to post
      
  -if current_user.present?                                    
    %table
      %tbody
        -@blocks.order(:cached_votes_up).reverse.each do |block|
          -poster = User.find(block.user_id)
            -if block.viewable == false || current_user.friends.include?(User.find(block.user_id)) || current_user == poster
            %tr
              .block.panel
                .form-group
                  =link_to "#{poster.name}", user_path(poster.id)               
                  %h9 - #{time_ago_in_words(block.created_at)} ago        
                .row
                  .col-xs-12
                    -if block.image.present?
                      .block-image{"data-target" => ".modal_#{block.id}", "data-toggle" => "modal"}
                        =image_tag block.image.url(:medium)
                      .modal.fade.bs-example-modal-lg{class: "modal_#{block.id}","aria-hidden" => "true", "aria-labelledby" => "myLargeModalLabel", role: "dialog", tabindex: "-1"}
                        .modal-dialog.modal-lg
                          .modal-content
                            =image_tag block.image.url
                .form-group
                  %p=block.body
                .form-group
                  %h9 #{block.get_upvotes.size}
                  = link_to upvote_block_path(block), method: :put do
                    .fa.fa-chevron-up
                  |
                  = link_to downvote_block_path(block), method: :put do
                    .fa.fa-chevron-down
                  .col-xs-3.pull-right
                    -if @user.present? && block.user_id = @user.id
                      = link_to edit_block_path(block) do
                        .fa.fa-edit
                      = link_to block, :method => :delete, :data => { :confirm => 'Delete permanently?' } do
                        .fa.fa-times-circle-o 
                .row
                  .col-xs-12
                    -if block.comments.present?
                      .panel-group{:id => "#accordian"}
                        .panel.panel-default
                          .panel-heading
                            %h4.panel-title
                              %a.accordion-toggle{"data-parent" => "#accordion", "data-toggle" => "collapse-next"}
                                Comments ...
                          .panel-collapse.collapse{:id => "#collapse#{block.id}"}
                            .panel-body
                              -block.comments.order(:cached_votes_up).reverse.each do |comment|
                                .row
                                  .col-xs-9
                                    %p=comment.body
                                  .col-xs-2
                                    =link_to "#{comment.user.name}", user_path(comment.user.id)
                                .form-group
                                  %h9 #{comment.get_upvotes.size}
                                  = link_to upvote_comment_path(comment), method: :put do
                                    .fa.fa-chevron-up
                                  |
                                  = link_to downvote_comment_path(comment), method: :put do
                                    .fa.fa-chevron-down
                .row
                  .col-xs-12
                    -if @user.present?
                      =form_for @comment do |f|
                        .form-group
                          =f.text_area :body, :class => 'form-control'
                          =f.hidden_field :block_id, value: block.id
                          =f.hidden_field :user_id, value: current_user.id
                        .form-group.pad-top-1
                          = button_tag(:type => 'submit', :class => 'btn btn-default') do
                            comment
                            .fa.fa-share
  -else
    %table
      %tbody
        -@blocks.order(:cached_votes_up).reverse.each do |block|
          -poster = User.find(block.user_id)           
            -if block.viewable == false
            %tr
              .block.panel
                .form-group
                  =link_to "#{poster.name}", user_path(poster.id)               
                  %h9 - #{time_ago_in_words(block.created_at)} ago        
                .row
                  .col-xs-12
                    -if block.image.present?
                      .block-image{"data-target" => ".modal_#{block.id}", "data-toggle" => "modal"}
                        =image_tag block.image.url(:medium)
                      .modal.fade.bs-example-modal-lg{class: "modal_#{block.id}","aria-hidden" => "true", "aria-labelledby" => "myLargeModalLabel", role: "dialog", tabindex: "-1"}
                        .modal-dialog.modal-lg
                          .modal-content
                            =image_tag block.image.url
                .form-group
                  %p=block.body
                .form-group
                  %h9 #{block.get_upvotes.size}
                  = link_to upvote_block_path(block), method: :put do
                    .fa.fa-chevron-up
                  |
                  = link_to downvote_block_path(block), method: :put do
                    .fa.fa-chevron-down
                .row
                  .col-xs-12
                    -if block.comments.present?
                      .panel-group{:id => "#accordian"}
                        .panel.panel-default
                          .panel-heading
                            %h4.panel-title
                              %a.accordion-toggle{"data-parent" => "#accordion", "data-toggle" => "collapse-next"}
                                Comments ...
                          .panel-collapse.collapse{:id => "#collapse#{block.id}"}
                            .panel-body
                              -block.comments.order(:cached_votes_up).reverse.each do |comment|
                                .row
                                  .col-xs-9
                                    %p=comment.body
                                  .col-xs-2
                                    =link_to "#{comment.user.name}", user_path(comment.user.id)
                                .form-group
                                  %h9 #{comment.get_upvotes.size}
                                  = link_to upvote_comment_path(comment), method: :put do
                                    .fa.fa-chevron-up
                                  |
                                  = link_to downvote_comment_path(comment), method: :put do
                                    .fa.fa-chevron-down           
.col-md-3

:javascript
$(function () {
  $('.panel-collapse').collapse({toggle: false});

  $('body').on('click', '[data-toggle=collapse-next]', function (e) {
    var parent_id = $(this).data('parent');
    $(parent_id+' .panel-collapse').collapse('hide');

    var $target = $(this).parents('.panel').find('.panel-collapse');
    $target.collapse('toggle');
  });
});
